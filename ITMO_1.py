# Считать единой строкой без пробелов набор целых чисел (28745623873465386),
# удалить все дубликаты, вывести отдельными операторами вывода в порядке
# возрастания и в порядке убывания в виде кортежей целых чисел
# (2, 3, 4, 5, 6, 7, 8) и (8, 7, 6, 5, 4, 3, 2).
#
# Пример входных данных:
# 28745623873465386
#
# Пример выходных данных:
# (2, 3, 4, 5, 6, 7, 8)
# (8, 7, 6, 5, 4, 3, 2)
lst = list(set(list(map(int, input()))))
print(tuple(sorted(lst)), tuple(sorted(lst, reverse=True)), sep='\n')


# Считать отдельными операторами целочисленные ширину и высоту прямоугольника.
# Создать функцию (def), принимающую в качестве параметров ширину и высоту
# фигуры и название функции, которую необходимо выполнить. Имя вложенной
# функции передавать явным образом (например: (a,b,name='perim')).
# Внутри функции создать две вложенные функции (def) по подсчету площади и
# периметра фигуры. Вывести одной строкой через пробел площадь и периметр,
# разделенные пробелом (например, '20 18').
def my_func(a, b, name):
    def perim(a, b):
        return 2 * (a + b)

    def square(a, b):
        return a * b

    if name == 'perim':
        return perim(a, b)
    elif name == 'square':
        return square(a, b)


# l = int(input())
# h = int(input())
# print(my_func(l,h, name='square'), my_func(l, h, name='perim')

# Считать отдельными операторами целочисленные ширину и высоту прямоугольника,
# создать функцию (def), принимающую в качестве параметров ширину и высоту
# фигуры.
# Внутри функции создать две вложенные функции (lambda) по подсчету площади и
# периметра фигуры. Вывести одной строкой через пробел площадь и периметр,
# разделенные пробелом (например '20 18').
def my_func1(a, b):
    perim = lambda x, y: 2 * (x + y)
    square = lambda x, y: x * y
    return [square(a, b), perim(a, b)]


# l = int(input())
# h = int(input())
# print(*my_func1(l,h))

# Считать отдельными операторами целочисленные ширину и высоту прямоугольника,
# создать список из лямбда функций подсчета площади и периметра фигуры.
# Вывести первым оператором индекс лямбда функции подсчета площади и ее
# результат (например:0 20);
# вторым оператором индекс лямбда функции подсчета периметра и ее результат
# (например:1 18);
# вывести третьим оператором список полученным значений (например: [20, 18]);
# вывести четвертым оператором итоговые значения, сведенные в одну строк через
# пробел (например: '20 18')


# l = int(input())
# h = int(input())
# perim = lambda x, y: 2 * (x + y)
# square = lambda x, y: x * y
# func_lst = [square, perim]
# for i, func in enumerate(func_lst):
#     print(i, func(l, h))
# print([func(l, h) for func in func_lst])
# print(*[func(l, h) for func in func_lst])
